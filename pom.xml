<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.yunhai.controller</groupId>
  <artifactId>web</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>web Maven Webapp</name>
  <url>http://maven.apache.org</url>
   <properties>
    <servlet-api.version>2.5</servlet-api.version>
    <spring.version>4.2.5.RELEASE</spring.version>
    <commons.version></commons.version>
    <jsp-api.version>2.2</jsp-api.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junitversion>3.8.1</junitversion>
	<log4j.version>1.7.21</log4j.version>
	<spring-security.version>4.2.2.RELEASE</spring-security.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
	<dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <!-- 
	 这个依赖已经被整合到spring-core里面了。和spring-core高级版本一起使用会有冲突
	<dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-asm</artifactId>
      <version>3.1.4.RELEASE</version>
      <scope>compile</scope>
    </dependency> -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context-support</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jms</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-oxm</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>
	<dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-webmvc</artifactId>
	<version>${spring.version}</version>
	<!--<version>${org.springframework-version}</version>-->
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${spring.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
		<version>${spring.version}</version>
	</dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.2</version>
      <scope>compile</scope>
    </dependency>
	<!-- servlet api -->
	<dependency>
		<groupId>javax.servlet</groupId>
		<artifactId>javax.servlet-api</artifactId>
		<version>3.0.1</version>
		<scope>provided</scope>
	</dependency>
	<dependency> 
	   <groupId>javax.servlet.jsp</groupId> 
	   <artifactId>jsp-api</artifactId> 
	   <version>2.2</version> 
	   <scope>provided</scope>
	</dependency>
	<!-- Logging -->    
	<!-- slf4j核心包-->  
     <dependency>  
         <groupId>org.slf4j</groupId>  
        <artifactId>slf4j-api</artifactId>  
        <version>1.7.13</version>  
    </dependency>  
      <dependency>  
          <groupId>org.slf4j</groupId>  
          <artifactId>jcl-over-slf4j</artifactId>  
         <version>1.7.13</version>  
         <scope>runtime</scope>  
     </dependency>  

    <!--核心log4j2jar包-->  
    <dependency>  
         <groupId>org.apache.logging.log4j</groupId>  
         <artifactId>log4j-api</artifactId>  
         <version>2.4.1</version>  
     </dependency>  
     <dependency>  
        <groupId>org.apache.logging.log4j</groupId>  
         <artifactId>log4j-core</artifactId>  
         <version>2.4.1</version>  
     </dependency>  
     <!--用于与slf4j保持桥接-->  
     <dependency>  
         <groupId>org.apache.logging.log4j</groupId>  
         <artifactId>log4j-slf4j-impl</artifactId>  
         <version>2.4.1</version>  
     </dependency>  
     <!--web工程需要包含log4j-web，非web工程不需要-->  
     <dependency>  
         <groupId>org.apache.logging.log4j</groupId>  
         <artifactId>log4j-web</artifactId>  
         <version>2.4.1</version>  
         <scope>runtime</scope>  
     </dependency>  

     <!--需要使用log4j2的AsyncLogger需要包含disruptor-->  
     <dependency>  
         <groupId>com.lmax</groupId>  
         <artifactId>disruptor</artifactId>  
         <version>3.2.0</version>  
     </dependency>
     <!-- jackson 引入一个其他也会自动引入，比如最后一个core会自动引入-->
     <dependency>
	    <groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-annotations</artifactId>
	    <version>2.8.5</version>
	</dependency>
	<dependency>
	    <groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-databind</artifactId>
	    <version>2.8.5</version>
	</dependency> 
	<dependency>
	    <groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-core</artifactId>
	    <version>2.8.5</version>
	</dependency>  
	<dependency>
	    <groupId>com.google.code.gson</groupId>
	    <artifactId>gson</artifactId>
	    <version>2.8.0</version>
	</dependency>
	<!--spring security配置 -->
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-config</artifactId>
		<version>${spring-security.version}</version>
	</dependency>
		<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-core</artifactId>
		<version>${spring-security.version}</version>
	</dependency>
	<dependency>
		<groupId>org.springframework.security</groupId>
		<artifactId>spring-security-web</artifactId>
		<version>${spring-security.version}</version>
	</dependency>
	<!--ehcache依赖 -->
	<dependency>
		<groupId>net.sf.ehcache</groupId>
		<artifactId>ehcache</artifactId>
		<version>2.8.2</version>
	</dependency>
  </dependencies>
  <build>
    <finalName>web</finalName>
	<plugins>
			<plugin>  
              <groupId>org.apache.maven.plugins</groupId>  
              <artifactId>maven-compiler-plugin</artifactId>  
              <executions>  
                  <execution>  
                      <id>default-compile</id>  
                      <phase>compile</phase>  
                      <goals>  
                          <goal>compile</goal>  
                      </goals>  
                  </execution>  
              </executions>  
              <configuration>  
                  <encoding>UTF-8</encoding>  
                  <source>1.8</source>  
            	  <target>1.8</target>  
              </configuration>  
          </plugin>  
  </plugins>
  <resources>
   <resource>
    <directory>conf</directory><!--自动也不会加入src/main/resource这个路径下的资源 -->
    <includes>
     <include>**/*.xml</include>
    </includes>
   </resource>
  </resources>
  </build>
</project>
