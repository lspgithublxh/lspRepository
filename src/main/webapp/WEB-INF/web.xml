<?xml version="1.0" encoding="UTF-8"?>
<web-app
		version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"  
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  <display-name>Archetype Created Web Application</display-name>
  <!-- 默认配置在WEB-INF目录下 , 位置必须放在最前面 ;多个配置文件用逗号分割开;可以模糊方式：spring*.xml-->  
   <context-param>
     <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-security.xml</param-value>
   </context-param>
   <!-- log4j的配置文件的路径位置自动会在classpath:下查找，所以不配置 -->
   <context-param>  
        <param-name>isLog4jAutoInitializationDisabled</param-name>  
        <param-value>false</param-value>  
    </context-param> 
  <!--对于log4j2，Servlet2.5以前的版本需要-->  
    <listener>  
      <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>  
    </listener> 
    <!-- spring 核心监听器-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
   </listener> 
   <listener>  
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>  
   </listener>
	<!-- Filter组 -->
   <filter>  
      <filter-name>log4jServletFilter</filter-name>  
      <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>  
   </filter> 
   <filter-mapping>
    <filter-name>log4jServletFilter</filter-name>
    <url-pattern>/*</url-pattern>
   </filter-mapping> 
   
   <filter>  
        <filter-name>characterEncodingFilter</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
        <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>characterEncodingFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
    <!--spring-security 注册过滤器链 -->
	<filter>  
         <filter-name>springSecurityFilterChain</filter-name>  
         <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>  
     </filter>  
    <filter-mapping>  
      <filter-name>springSecurityFilterChain</filter-name>  
      <url-pattern>/*</url-pattern>  
    </filter-mapping>
	
    <!-- 默认的服务器的servlet来处理 -->
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.css</url-pattern> 
        <url-pattern>*.jpg</url-pattern>
        <url-pattern>*.png</url-pattern>
        <url-pattern>*.js</url-pattern>
        <url-pattern>*.xml</url-pattern> 
        <url-pattern>*.json</url-pattern>
    </servlet-mapping>
    
   <!-- DispatcherServlet -->
   <servlet>
	    <servlet-name>SpringMVCLSP</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	      <init-param>
	        <param-name>contextConfigLocation</param-name>
	        <param-value>classpath:spring-core.xml</param-value>
	    </init-param> 
    	<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
	    <servlet-name>SpringMVCLSP</servlet-name>
	    <url-pattern>/*</url-pattern>
	</servlet-mapping>

 <!-- 剩余配置 -->
   <welcome-file-list><!--指定欢迎页面-->  
        <welcome-file>login.html</welcome-file>  
    </welcome-file-list>  
    <error-page> <!--当系统出现404错误，跳转到页面nopage.html-->  
        <error-code>404</error-code>  
        <location>/nopage.html</location>  
    </error-page>  
    <error-page> <!--当系统出现java.lang.NullPointerException，跳转到页面error.html-->  
        <exception-type>java.lang.NullPointerException</exception-type>  
        <location>/error.html</location>  
    </error-page>  
    <session-config><!--会话超时配置，单位分钟-->  
        <session-timeout>360</session-timeout>  
    </session-config>  
</web-app>
